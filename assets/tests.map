{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","dummy/tests/integration/components/nypr-a-ad-label-test.js","dummy/tests/integration/components/nypr-a-button-test.js","dummy/tests/integration/components/nypr-a-kicker-test.js","dummy/tests/integration/components/nypr-a-media-object-test.js","dummy/tests/integration/components/nypr-a-picture-test.js","dummy/tests/integration/components/nypr-a-section-heading-test.js","dummy/tests/integration/components/nypr-a-story-headline-test.js","dummy/tests/integration/components/nypr-a-svg-test.js","dummy/tests/integration/components/nypr-a-tag-test.js","dummy/tests/integration/components/nypr-a-toggle-box-test.js","dummy/tests/integration/components/nypr-m-author-block-test.js","dummy/tests/integration/components/nypr-m-block-list-test.js","dummy/tests/integration/components/nypr-m-block-meta-test.js","dummy/tests/integration/components/nypr-m-block-test.js","dummy/tests/integration/components/nypr-m-box-banner-test.js","dummy/tests/integration/components/nypr-m-brands-linkroll-test.js","dummy/tests/integration/components/nypr-m-breadcrumb-test.js","dummy/tests/integration/components/nypr-m-byline-test.js","dummy/tests/integration/components/nypr-m-figcaption-test.js","dummy/tests/integration/components/nypr-m-figure-test.js","dummy/tests/integration/components/nypr-m-gallery-lead-test.js","dummy/tests/integration/components/nypr-m-inline-search-test.js","dummy/tests/integration/components/nypr-m-nav-read-more-test.js","dummy/tests/integration/components/nypr-m-newsletter-form-test.js","dummy/tests/integration/components/nypr-m-newsletter-test.js","dummy/tests/integration/components/nypr-m-progress-bar-test.js","dummy/tests/integration/components/nypr-m-pullquote-test.js","dummy/tests/integration/components/nypr-m-secondary-nav-test.js","dummy/tests/integration/components/nypr-m-share-tools-test.js","dummy/tests/integration/components/nypr-m-tags-test.js","dummy/tests/integration/components/nypr-m-text-banner-test.js","dummy/tests/integration/components/nypr-m-to-top-test.js","dummy/tests/integration/components/nypr-o-article-body-test.js","dummy/tests/integration/components/nypr-o-article-footer-test.js","dummy/tests/integration/components/nypr-o-article-header-test.js","dummy/tests/integration/components/nypr-o-block-list-group-test.js","dummy/tests/integration/components/nypr-o-contact-test.js","dummy/tests/integration/components/nypr-o-donate-test.js","dummy/tests/integration/components/nypr-o-featured-block-list-test.js","dummy/tests/integration/components/nypr-o-footer-test.js","dummy/tests/integration/components/nypr-o-gallery-overlay-test.js","dummy/tests/integration/components/nypr-o-header-test.js","dummy/tests/integration/components/nypr-o-newsletter-tout-test.js","dummy/tests/integration/components/nypr-o-related-content-test.js","dummy/tests/integration/components/nypr-o-sponsored-tout-test.js","dummy/tests/integration/helpers/cast-test.js","dummy/tests/integration/helpers/in-viewport-test.js","dummy/tests/lint/app.lint-test.js","dummy/tests/lint/templates.template.lint-test.js","dummy/tests/lint/tests.lint-test.js","dummy/tests/test-helper.js","dummy/tests/unit/services/nypr-o-header-test.js","dummy/tests/unit/utils/toggle-box-positions-test.js","vendor/ember-cli/app-config.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","import { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\n\nmodule('Integration | Component | nypr-a-ad-label', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('it renders', async function(assert) {\n    await render(hbs`<NyprAAdLabel/>`);\n\n    assert.dom('.o-ad__label').exists();\n  });\n});\n","import { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render, click } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\n\nmodule('Integration | Component | nypr-a-button', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('it renders', async function(assert) {\n    assert.expect(3);\n\n    await render(hbs`<NyprAButton @text='Foo' />`);\n\n    assert.dom('.o-button').hasText('Foo');\n\n    this.set('click', () => assert.ok('click handler called'));\n\n    await render(hbs`\n      <NyprAButton @onclick={{click}}>\n        Click Me\n      </NyprAButton>\n    `);\n\n    assert.dom('.o-button').hasText('Click Me');\n    await click('.o-button');\n  });\n\n  test('alternate forms', async function(assert) {\n\n    await render(hbs`<NyprAButton @url='https://example.com' @text='foo' />`);\n    assert.dom('a.o-button').hasAttribute('href', 'https://example.com', 'passing a @url makes an `a` tag');\n    assert.dom('a.o-button').hasText('foo');\n\n    await render(hbs`<NyprAButton @blank={{true}} @text='plain' />`);\n    assert.dom('button.o-button').doesNotExist('rendered without class');\n    assert.dom('button').exists('rendered a blank button');\n  });\n\n  test('classes can be added via component helper form', async function(assert) {\n    await render(hbs`{{component 'nypr-a-button' class='foo' text='bar'}}`);\n\n    assert.dom('button.o-button.foo').hasText('bar');\n  })\n});\n","import { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\n\nmodule('Integration | Component | nypr-a-kicker', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('it renders', async function(assert) {\n    await render(hbs`<NyprAKicker/>`);\n\n    assert.dom('.o-kicker').exists();\n\n    // Template block usage:\n    await render(hbs`\n      <NyprAKicker>\n        template block text\n      </NyprAKicker>\n    `);\n\n    assert.equal(this.element.textContent.trim(), 'template block text');\n  });\n});\n","import { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\n\nmodule('Integration | Component | nypr-a-media-object', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('it renders', async function(assert) {\n    await render(hbs`<NyprAMediaObject/>`);\n\n    assert.dom('.media-object').exists();\n  });\n});\n","import { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\n\nmodule('Integration | Component | nypr-a-picture', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('it renders', async function(assert) {\n    const IMG = 'https://picsum.photos/300';\n    this.set('img', IMG);\n    await render(hbs`<NyprAPicture @srcS={{img}}/>`);\n\n    assert.dom('picture').exists();\n    assert.dom('picture img').hasAttribute('src', IMG);\n  });\n});\n","import { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\n\nmodule('Integration | Component | nypr-a-section-heading', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('it renders', async function(assert) {\n    await render(hbs`<NyprASectionHeading/>`);\n\n    assert.dom('h2.o-section-heading').exists();\n\n    // Template block usage:\n    await render(hbs`\n      <NyprASectionHeading>\n        template block text\n      </NyprASectionHeading>\n    `);\n\n    assert.dom('h2.o-section-heading').hasText('template block text');\n  });\n});\n","import { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\n\nmodule('Integration | Component | nypr-a-story-headline', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('it renders', async function(assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.set('myAction', function(val) { ... });\n\n    await render(hbs`<NyprAStoryHeadline/>`);\n\n    assert.equal(this.element.textContent.trim(), '');\n\n    // Template block usage:\n    await render(hbs`\n      <NyprAStoryHeadline>\n        template block text\n      </NyprAStoryHeadline>\n    `);\n\n    assert.dom('h1.o-headline').hasText('template block text');\n  });\n});\n","import { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\n\nmodule('Integration | Component | nypr-a-svg', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('it renders', async function(assert) {\n    await render(hbs`<NyprASvg/>`);\n    assert.equal(this.element.textContent.trim(), '', 'renders nothing with no inputs');\n\n    await render(hbs`<NyprASvg @icon=\"whatever\"/>`);\n    assert.ok('renders ok with a bad filename');\n  });\n});\n","import { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\n\nmodule('Integration | Component | nypr-a-tag', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('it renders', async function(assert) {\n    await render(hbs`<NyprATag @url='http://example.com' @tag='foo' />`);\n\n    assert.dom('a.o-tag').hasText('#foo', 'prepends a \"#\" character');\n\n    await render(hbs`<NyprATag @url='http://example.com' @tag='foo' @prefix='' />`);\n    assert.dom('a.o-tag').hasText('foo', 'can override prefix');\n\n    await render(hbs`<NyprATag @tag='bar'/>`);\n    assert.dom('span.o-tag').exists('renders a span if no url is provided');\n  });\n});\n","import { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\nimport { clickTrigger } from 'ember-basic-dropdown/test-support/helpers';\n\n\nmodule('Integration | Component | nypr-a-toggle-box', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('it renders', async function(assert) {\n    await render(hbs`\n      <NyprAToggleBox as |toggle|>\n        <toggle.trigger>\n          <span class=\"the-label\">Toggle Box Label</span>\n        </toggle.trigger>\n\n        <toggle.dropdown>\n          Dropdown Contents\n        </toggle.dropdown>\n      </NyprAToggleBox>\n    `);\n\n    // target span b/c there's an icon with assistive text in the label\n    assert.dom('.c-toggle-box__label span.the-label').hasText('Toggle Box Label');\n    await clickTrigger();\n    assert.dom('.c-toggle-box__dropdown').hasText('Dropdown Contents');\n  });\n});\n","import { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\n\nmodule('Integration | Component | nypr-m-author-block', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('it renders', async function(assert) {\n    const AUTHOR = {\n      name: 'Jen Chung',\n      title: 'Executive editor and co-founder',\n      image: '/images/staff/jen-chung.jpg',\n      bio: \"Jen, a New Jersey-born New Yorker, edits Gothamist. She attended Columbia University, likes learning about NYC infrastructure (the subway system's intricacies, how engineers design skyscrapers), and hopes that one day a NYC zoo will have pandas. Her favorite TV shows are usually crime procedurals set in New York City, preferably with a chung-chung sound effect. She also yells at cars for not obeying stop signs.\",\n      contact: {\n        twitter: 'jenchung',\n        email: 'jen@gothamist.com',\n      },\n    };\n    this.set('author', AUTHOR);\n\n    await render(hbs`<NyprMAuthorBlock @author={{author}}/>`);\n\n    assert.dom('[data-test-author-name]').hasText(AUTHOR.name);\n    assert.dom('[data-test-author-title]').hasText(AUTHOR.title);\n    assert.dom('[data-test-author-media] img').hasAttribute('src', AUTHOR.image);\n    assert.dom('[data-test-author-bio]').hasText(AUTHOR.bio);\n  });\n});\n","import { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\n\nmodule('Integration | Component | nypr-m-block-list', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('it renders', async function(assert) {\n    await render(hbs`\n      <NyprMBlockList @items={{array 'foo' 'bar'}} as |item|>\n        {{item}}\n      </NyprMBlockList>\n    `);\n\n    assert.dom('.c-block-list').exists();\n    assert.dom('.c-block-list li').exists({count: 2});\n    assert.dom('.c-block-list').includesText('foo bar', 'yields out items unchanged');\n  });\n});\n","import { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\n\nmodule('Integration | Component | nypr-m-block-meta', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('it renders', async function(assert) {\n    await render(hbs`<NyprMBlockMeta/>`);\n\n    assert.dom('.c-block-meta').exists();\n  });\n});\n","import { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\n\nmodule('Integration | Component | nypr-m-block', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('it renders', async function(assert) {\n    await render(hbs`<NyprMBlock/>`);\n    assert.dom('.c-block').exists();\n\n    await render(hbs`<NyprMBlock @orientation='h'/>`);\n    assert.dom('.c-block--horizontal').exists('`orientation` controls a class');\n\n    await render(hbs`<NyprMBlock @orientation='h' @size='l'/>`);\n    assert.dom('.c-block--horizontal.c-block--horizontal--large').exists('`size` controls a class');\n\n    await render(hbs`<NyprMBlock @urgent={{true}} />`);\n    assert.dom('.c-block--urgent').exists();\n  });\n\n  test('icons', async function(assert) {\n    await render(hbs`\n      <NyprMBlock as |block|>\n        <block.object as |o|>\n          <o.title @h2 @hasGallery={{true}}>\n            Foo\n          </o.title>\n        </block.object>\n      </NyprMBlock>\n    `);\n\n    assert.dom('.c-block__title--is-gallery').exists();\n\n    await render(hbs`\n      <NyprMBlock as |block|>\n        <block.object as |o|>\n          <o.title @h2 @hasVideo={{true}}>\n            Foo\n          </o.title>\n        </block.object>\n      </NyprMBlock>\n    `);\n\n    assert.dom('.c-block__title--is-video').exists();\n\n    await render(hbs`\n      <NyprMBlock as |block|>\n        <block.object as |o|>\n          <o.title @h2 @hasAudio={{true}}>\n            Foo\n          </o.title>\n        </block.object>\n      </NyprMBlock>\n    `);\n\n    assert.dom('.c-block__title--is-audio').exists();\n\n    await render(hbs`\n      <NyprMBlock as |block|>\n        <block.object as |o|>\n          <o.title @h2 @hasAudio={{true}}>\n            Foo\n          </o.title>\n        </block.object>\n      </NyprMBlock>\n    `);\n\n    assert.dom('.c-block__title--is-audio').exists();\n\n    await render(hbs`\n      <NyprMBlock as |block|>\n        <block.object as |o|>\n          <o.title @h2 @hasVideo={{true}} @hasGallery={{true}}>\n            Foo\n          </o.title>\n        </block.object>\n      </NyprMBlock>\n    `);\n\n    assert.dom('.c-block__title--is-gallery').exists();\n    assert.dom('.c-block__title--is-video').doesNotExist('gallery takes precedence over video');\n  })\n});\n","import { module } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render, click } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\nimport test from 'ember-sinon-qunit/test-support/test';\n\nmodule('Integration | Component | nypr-m-box-banner', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('it renders', async function(assert) {\n    await render(hbs`<NyprMBoxBanner/>`);\n\n    assert.dom('.o-box-banner').exists();\n\n    // Template block usage:\n    await render(hbs`\n      <NyprMBoxBanner as |banner|>\n        <banner.title>TITLE</banner.title>\n\n        <banner.body as |body|>\n          <body.dek>BODY</body.dek>\n          <body.cta>CTA</body.cta>\n        </banner.body>\n      </NyprMBoxBanner>\n    `);\n\n    assert.dom('.o-box-banner__title').hasText('TITLE');\n    assert.dom('.o-box-banner__dek').hasText('BODY');\n    assert.dom('.o-box-banner__cta').hasText('CTA');\n  });\n\n  test('it calls the @close action when close is clicked', async function(assert) {\n    await render(hbs`<NyprMBoxBanner/>`);\n    assert.dom('.o-box-banner__close').doesNotExist('no close button if @close is not passed in');\n\n    this.set('CLOSE', this.mock('close').once());\n\n    await render(hbs`<NyprMBoxBanner @close={{CLOSE}}/>`);\n\n    await click('.o-box-banner__close');\n  });\n});\n","import { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render, click } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\n\nmodule('Integration | Component | nypr-m-brands-linkroll', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('it renders', async function(assert) {\n    await render(hbs`{{nypr-m-brands-linkroll}}`);\n\n    assert.dom('.c-toggle-box--linkroll').exists();\n  });\n\n  test('can choose a site to exclude', async function(assert) {\n    await render(hbs`<NyprMBrandsLinkroll @exclude='gothamist'/>`);\n\n    await click('.c-toggle-box--linkroll > button'); // open the linkroll\n    assert.dom('.c-nypr-nav__list').doesNotIncludeText('Gothamist');\n  });\n\n  test('can exclude multiple sites', async function(assert) {\n    await render(hbs`<NyprMBrandsLinkroll @exclude={{array 'gothamist' 'wqxr'}}/>`);\n\n    await click('.c-toggle-box--linkroll > button'); // open the linkroll\n    assert.dom('.c-nypr-nav__list').doesNotIncludeText('Gothamist');\n    assert.dom('.c-nypr-nav__list').doesNotIncludeText('WQXR');\n  })\n});\n","import { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\n\nmodule('Integration | Component | nypr-m-breadcrumb', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('it renders', async function(assert) {\n    await render(hbs`<NyprMBreadcrumb/>`);\n\n    assert.dom('.o-breadcrumbs').exists();\n\n    this.set('breadcrumbs', [{label: 'News', url: '/tags/news'}, {label: 'Politics'}]);\n\n    await render(hbs`<NyprMBreadcrumb @breadcrumbs={{breadcrumbs}}/>`);\n\n    assert.dom('.o-breadcrumb').exists({count: 2});\n    assert.dom('a.o-breadcrumb').hasAttribute('href', '/tags/news');\n    assert.dom('span.o-breadcrumb').exists({count: 1});\n  });\n});\n","import { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render, findAll } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\n\nmodule('Integration | Component | nypr-m-byline', function(hooks) {\n  const IN_HOUSE = [{\n    name: 'Foo Bar',\n    url: 'https://example.com/foo-bar'\n  }, {\n    name: 'Biz Baz',\n    url: 'https://example.com/biz-baz'\n  }];\n\n  const CONTRIBUTORS = [{\n    name: 'Qux Wux',\n    url: 'https://example.com/qux-wux',\n    org: {\n      name: 'WNYC',\n      url: 'https://example.org/wnyc',\n    }\n  }, {\n    name: 'Zooey Yooey',\n    url: 'https://example.com/zooey-yooey',\n    org: {\n      name: 'NPR',\n      url: 'https://example.org/npr',\n    }\n  }];\n\n  setupRenderingTest(hooks);\n\n  test('it renders', async function(assert) {\n    await render(hbs`<NyprMByline/>`);\n    assert.dom('.o-byline').exists();\n  });\n\n  test('1 to n in house authors', async function(assert) {\n    this.setProperties({\n      IN_HOUSE,\n      JUST_ONE: IN_HOUSE.slice(-1)\n    });\n\n    // N many\n    await render(hbs`<NyprMByline @authors={{IN_HOUSE}} />`);\n\n    assert.dom('[data-test-author-name]').exists({count: 2});\n    findAll('[data-test-author-name]').forEach((el, i) => {\n      assert.dom(el).hasText(IN_HOUSE[i].name);\n      assert.dom(el).hasAttribute('href', IN_HOUSE[i].url);\n    });\n\n    // JUST ONE\n    await render(hbs`<NyprMByline @authors={{JUST_ONE}} />`);\n\n    assert.dom('[data-test-author-name]').exists({count: 1});\n    assert.dom('.o-byline').doesNotIncludeText(',', 'single names should not be a serialized list')\n  });\n\n  test('1 to n authors from contributing orgs, no in house authors', async function(assert) {\n    this.setProperties({\n      CONTRIBUTORS,\n      JUST_ONE: CONTRIBUTORS.slice(-1),\n    });\n\n    // N many\n    await render(hbs`<NyprMByline @authors={{CONTRIBUTORS}} />`);\n\n    assert.dom('[data-test-author-name]').exists({count: 2});\n    assert.dom('[data-test-author-org]').exists({count: 2});\n\n    findAll('[data-test-author-name]').forEach((el, i) => {\n      assert.dom(el).hasText(CONTRIBUTORS[i].name);\n      assert.dom(el).hasAttribute('href', CONTRIBUTORS[i].url);\n    });\n\n    findAll('[data-test-author-org-link]').forEach((el, i) => {\n      assert.dom(el).hasText(CONTRIBUTORS[i].org.name);\n      assert.dom(el).hasAttribute('href', CONTRIBUTORS[i].org.url);\n    });\n\n    // JUST ONE\n    await render(hbs`<NyprMByline @authors={{JUST_ONE}} />`);\n\n    assert.dom('[data-test-author-name]').exists({count: 1});\n    assert.dom('[data-test-author-org]').exists({count: 1});\n  });\n\n  test('1 to n in-house authors with 1 to n authors from contributing orgs', async function(assert) {\n    const ALL = IN_HOUSE.concat(CONTRIBUTORS);\n    const JUST_TWO = IN_HOUSE.slice(-1).concat(CONTRIBUTORS.slice(-1));\n\n    this.setProperties({\n      ALL,\n      JUST_TWO,\n    });\n\n    // N many\n    await render(hbs`<NyprMByline @authors={{ALL}}/>`);\n\n    assert.dom('[data-test-author-name]').exists({count: 4});\n    assert.dom('[data-test-author-org]').exists({count: 2});\n\n    findAll('[data-test-author-name]').forEach((el, i) => {\n      assert.dom(el).hasText(ALL[i].name);\n      assert.dom(el).hasAttribute('href', ALL[i].url);\n    });\n\n    // JUST ONE OF EACH\n    await render(hbs`<NyprMByline @authors={{JUST_TWO}}/>`);\n\n    assert.dom('[data-test-author-name]').exists({count: 2});\n    assert.dom('[data-test-author-org]').exists({count: 1});\n\n    findAll('[data-test-author-name]').forEach((el, i) => {\n      assert.dom(el).hasText(JUST_TWO[i].name);\n      assert.dom(el).hasAttribute('href', JUST_TWO[i].url);\n    });\n  });\n\n  test('sponsored', async function(assert) {\n    const SPONSOR = {\n      name: 'BMW',\n      url: 'https://example.com/bmw',\n    };\n    this.setProperties({SPONSOR});\n\n    await render(hbs`<NyprMByline @sponsor={{SPONSOR}}/>`);\n    assert.dom('[data-test-sponsor-name]').hasText(`Sponsored by ${SPONSOR.name}`);\n    assert.dom('[data-test-sponsor-name]').hasAttribute('href', SPONSOR.url)\n  });\n});\n","import { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\n\nmodule('Integration | Component | nypr-m-figcaption', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('it renders', async function(assert) {\n    const CAPTION = \"Figure caption\";\n    const CREDIT = \"Credit for this figure\";\n\n    this.setProperties({\n      caption: CAPTION,\n      credit: CREDIT,\n    });\n    await render(hbs`\n      <NyprMFigcaption @caption={{caption}} @credit={{credit}}/>\n    `);\n\n    assert.dom('figcaption.o-caption').exists();\n    assert.dom('figcaption').includesText(CAPTION);\n    assert.dom('figcaption .o-credit').hasText(CREDIT);\n  });\n\n  test('the many variations of figcaptions', async function(assert) {\n    const CAPTION = \"Figure caption\";\n    const CREDIT = \"Credit for this figure\";\n    this.setProperties({\n      caption: CAPTION,\n      credit: CREDIT,\n    });\n\n    await render(hbs`\n      <NyprMFigcaption @caption={{caption}} @credit={{credit}}/>\n    `);\n    assert.dom('.o-caption > .o-icon').exists('inline form puts the icon insdide the caption root');\n    assert.dom('.o-caption > .o-icon + .o-caption__text').exists('inline form puts the text as a sibling to the icon');\n    assert.dom('.o-caption > .o-caption__text > span:not(.o-credit)').hasText(CAPTION);\n    assert.dom('.o-caption > .o-caption__text > span.o-credit').hasText(CREDIT);\n\n    await render(hbs`\n      <NyprMFigcaption @credit={{credit}}/>\n    `);\n    assert.dom('.o-caption > .o-caption__text > span.o-credit > span.o-icon').exists('inline form WITHOUT a caption puts the icon inside the credit span');\n    assert.dom('.o-caption > .o-caption__text > span.o-credit > span:not(.o-icon)').hasText(CREDIT);\n\n    await render(hbs`\n      <NyprMFigcaption as |figcaption|>\n        <figcaption.caption @caption={{caption}} />\n      </NyprMFigcaption>\n    `);\n    assert.dom('.o-caption > .o-icon + .o-caption__text').exists('block form with only an inline caption puts the icon directly below `.o-caption` as a sibling of `.o-caption__text`')\n    assert.dom('.o-caption > .o-caption__text > span').hasText(CAPTION);\n\n    await render(hbs`\n      <NyprMFigcaption as |figcaption|>\n        <figcaption.credit @credit={{credit}} />\n        <figcaption.caption @caption={{caption}} />\n      </NyprMFigcaption>\n    `);\n    assert.dom('.o-caption > .o-credit + .o-icon + .o-caption__text').exists('adding a credit does not interfere with the icon rendering');\n    assert.dom('.o-caption > .o-credit > span').doesNotExist('no inner span for credit');\n    assert.dom('.o-caption > .o-credit').hasText(CREDIT);\n    assert.dom('.o-caption > .o-caption__text > span').hasText(CAPTION);\n\n    await render(hbs`\n      <NyprMFigcaption as |figcaption|>\n        <figcaption.credit @credit={{credit}} @includeIcon={{true}}/>\n      </NyprMFigcaption>\n    `);\n    assert.dom('.o-caption > .o-credit > span.o-icon').exists('block form with only inline credit requires @includeIcon to show an icon');\n    assert.dom('.o-caption > .o-credit > span:not(.o-icon)').hasText(CREDIT, 'rendering with `@includeIcon` adds a wrapper span')\n  })\n});\n","import { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\n\nmodule('Integration | Component | nypr-m-figure', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('it renders', async function(assert) {\n    await render(hbs`<NyprMFigure/>`);\n\n    assert.dom('figure.o-figure').exists();\n  });\n});\n","import { module } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render, click } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\nimport test from 'ember-sinon-qunit/test-support/test';\n\nconst GALLERY = [{\n  caption: 'This is a slide caption',\n  credit: 'Getty',\n  thumb: 'https://picsum.photos/100/100?random',\n  srcS: 'https://picsum.photos/600/300?random',\n  title: 'This is what a slide title looks like',\n}, {\n  caption: 'This is a slide only a caption; no title or credit',\n  thumb: 'https://picsum.photos/100/100?random=1',\n  srcS: 'https://picsum.photos/600/300?random=1',\n}, {\n  title: 'This is a slide with only a title',\n  thumb: 'https://picsum.photos/100/100?random=2',\n  srcS: 'https://picsum.photos/600/300?random=2',\n}, {\n  caption: 'This is a slide with no title; just caption & credit',\n  credit: 'Foo Bar/AP News',\n  thumb: 'https://picsum.photos/100/100?random=3',\n  srcS: 'https://picsum.photos/600/300?random=3',\n}];\n\nmodule('Integration | Component | nypr-m-gallery-lead', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('it renders', async function(assert) {\n    this.set('gallery', GALLERY);\n    this.set('goToSlide', this.mock('goToSlide is called with the current index when clicking the current slide').once().withArgs(1));\n    await render(hbs`<NyprMGalleryLead @slides={{gallery}} @goToSlide={{goToSlide}} />`);\n\n    assert.dom('.c-lead-gallery').exists();\n    assert.dom('.c-lead-gallery__thumbs-thumb').exists({count: GALLERY.length + 1}, 'one thumbnail for each image plus the \"view all\" button');\n    assert.dom('figure.o-figure img').hasAttribute('src', GALLERY[0].srcS);\n    assert.dom('.c-lead-gallery__thumbs-thumb-text').hasText(`View all ${GALLERY.length}`);\n\n    await click('[data-test-gallery-thumb=\"1\"]');\n    assert.dom('figure.o-figure img').hasAttribute('src', GALLERY[1].srcS, 'it changes the active slide when clicking a thumbnail');\n\n    await click('[data-test-gallery-current]');\n  });\n});\n","import { module } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render, click, fillIn } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\nimport test from 'ember-sinon-qunit/test-support/test';\n\nmodule('Integration | Component | nypr-m-inline-search', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('it renders', async function(assert) {\n    await render(hbs`<NyprMInlineSearch/>`);\n\n    assert.dom('form.c-search').exists();\n\n    await render(hbs`\n      <NyprMInlineSearch as |search|>\n        <search.open/>\n\n        <search.form/>\n      </NyprMInlineSearch>\n    `);\n\n    assert.dom('button.c-search-toggle').exists();\n    assert.dom('form.c-search').exists();\n  });\n\n  test('interactivity', async function(assert) {\n    assert.expect(10);\n\n    const QUERY = 'foo';\n    const SEARCH = val => assert.equal(val, QUERY);\n    this.setProperties({\n      QUERY,\n      SEARCH,\n    });\n\n    await render(hbs`\n      <NyprMInlineSearch as |search|>\n        <search.open/>\n        <search.form @search={{SEARCH}}/>\n      </NyprMInlineSearch>\n\n      <div id=\"outside\">not in the search form</div>\n    `);\n\n    assert.dom('.c-search').hasAttribute('aria-hidden', 'true');\n\n    await click('.c-search-toggle');\n    assert.dom('.c-search.is-open').exists();\n    assert.dom('.c-search').hasAttribute('aria-hidden', 'false');\n    assert.dom('button.c-search__button[type=\"submit\"]').exists('submit button exists');\n\n    await fillIn('.c-search__input', QUERY);\n    await click('#outside');\n    assert.dom('.c-search.is-open').doesNotExist('should close on blur');\n    await click('.c-search-toggle');\n    assert.dom('.c-search__input').hasNoValue('should clear on blur');\n\n    await fillIn('.c-search__input', QUERY);\n    await click('[data-test-inline-search-submit]');\n\n    assert.dom('.c-search.is-open').exists();\n    await fillIn('.c-search__input', '');\n    await click('[data-test-inline-search-submit]');\n    assert.dom('.c-search.is-open').doesNotExist('should close if field is empty and submit is clicked');\n\n    await render(hbs`<NyprMInlineSearch @search={{SEARCH}} />`);\n\n    await fillIn('.c-search__input', QUERY);\n    await click('[data-test-inline-search-submit]');\n  });\n\n  test('can init with a query value', async function(assert) {\n    const QUERY = 'foo';\n    this.setProperties({\n      QUERY,\n    });\n    await render(hbs`<NyprMInlineSearch @query={{QUERY}}/>`);\n\n    assert.dom('.c-search__input').hasValue(QUERY);\n  });\n\n  test('can update search value from outer context', async function(assert) {\n    const SEARCH = this.spy();\n    const QUERY = 'foo'\n    this.setProperties({\n      SEARCH,\n      QUERY,\n    });\n\n    await render(hbs`<NyprMInlineSearch @query={{QUERY}} @search={{SEARCH}}/>`);\n    await click('[data-test-inline-search-submit]');\n\n    this.set('QUERY', 'bar');\n    await click('[data-test-inline-search-submit]');\n\n    assert.ok(SEARCH.firstCall.calledWith('foo'), 'first call is called with the initial value');\n    assert.ok(SEARCH.secondCall.calledWith('bar'), 'second call is called with the updated value');\n  });\n});\n","import { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\n\nmodule('Integration | Component | nypr-m-nav-read-more', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('it renders', async function(assert) {\n    await render(hbs`\n      <NyprMNavReadMore @items={{array\n        (hash route=(array 'tags' 'news') label='News')\n        (hash route=(array 'tags' 'arts') label='Arts')\n      }}/>\n    `);\n\n    assert.dom('.c-read-more-nav').exists();\n    assert.dom('.c-read-more-nav__item').exists({count: 2});\n    assert.dom('.c-read-more-nav ul').includesText('News Arts');\n  });\n});\n","import { module } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render, click, fillIn } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\nimport test from 'ember-sinon-qunit/test-support/test';\n\nimport * as fetch from 'fetch';\n\nimport { DEFAULT_SUBSCRIBED_MESSAGE } from 'nypr-design-system/components/nypr-m-newsletter-form';\n\n\nmodule('Integration | Component | nypr-m-newsletter-form', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('it handles successful submissions', async function(assert) {\n    const ENDPOINT = 'https://example.com';\n    const EMAIL = 'foo@bar.com';\n    const OTHER_PARAMS = {id: 'baz'};\n    const SUCCESS_RESPONSE = new Response(JSON.stringify({status: 'subscribed'}), {status: 200});\n\n    this.setProperties({\n      ENDPOINT,\n      OTHER_PARAMS,\n    });\n\n    this.mock(fetch)\n      .expects('default')\n      .withArgs(ENDPOINT, {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({...OTHER_PARAMS, email: EMAIL})\n      })\n      .resolves(SUCCESS_RESPONSE);\n\n    await render(hbs`\n      <NyprMNewsletterForm @endpoint={{ENDPOINT}} @params={{OTHER_PARAMS}} as |form|>\n        <form.input/>\n        <form.submit/>\n      </NyprMNewsletterForm>\n    `);\n\n    await fillIn('.c-newsletter-form__input', EMAIL);\n    await click('[data-test-newsletter-submit]');\n\n    assert.dom('.c-newsletter-form__message').hasText(DEFAULT_SUBSCRIBED_MESSAGE);\n  });\n\n  test('it handles error responses', async function(assert) {\n    const EMAIL = 'foo@bar.com';\n    const ENDPOINT = 'https://example.com';\n    const ERROR_MESSAGE = 'bad news';\n    const ERROR_RESPONSE = new Response(JSON.stringify({detail: ERROR_MESSAGE}), {status: 400});\n\n    this.setProperties({\n      ENDPOINT,\n    });\n\n    this.mock(fetch)\n      .expects('default')\n      .withArgs(ENDPOINT, {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({email: EMAIL})\n      })\n      .resolves(ERROR_RESPONSE);\n\n    await render(hbs`\n      <NyprMNewsletter @endpoint={{ENDPOINT}} />\n    `);\n\n    await fillIn('.c-newsletter-form__input', EMAIL);\n    await click('[data-test-newsletter-submit]');\n\n    assert.dom('.c-newsletter-form__message').hasText(ERROR_MESSAGE);\n  });\n});\n","import { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\n\nimport { DEFAULT_LEGAL } from 'nypr-design-system/components/nypr-m-newsletter-form';\n\nmodule('Integration | Component | nypr-m-newsletter', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('it renders', async function(assert) {\n    const BLURB = \"Sign up for this great newsletter.\";\n    const OTHER_LEGAL = \"Waive all your rights.\";\n\n    this.setProperties({\n      BLURB,\n      OTHER_LEGAL,\n    });\n\n    await render(hbs`\n      <NyprMNewsletter as |newsletter|>\n\n        <newsletter.graphic>\n          <NyprASvg @icon='party-confetti'/>\n        </newsletter.graphic>\n\n        <newsletter.blurb>\n          {{BLURB}}\n        </newsletter.blurb>\n\n        <newsletter.legal/>\n\n      </NyprMNewsletter>\n    `);\n\n    assert.dom('.c-newsletter-form__graphic svg.party-confetti-icon').exists('can render into graphic slot');\n    assert.dom('[data-test-newsletter-blurb]').hasText(BLURB);\n    assert.dom('.c-newsletter-form__terms').hasText(DEFAULT_LEGAL, 'must use the yielded `.legal` component in order to display terms');\n\n    await render(hbs`\n      <NyprMNewsletter as |newsletter|>\n        <newsletter.legal>\n          {{OTHER_LEGAL}}\n        </newsletter.legal>\n      </NyprMNewsletter>\n    `);\n\n    assert.dom('.c-newsletter-form__terms').hasText(OTHER_LEGAL, 'can pass in other legal terms');\n  });\n\n});\n","import { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\nimport { scrollPastTarget } from 'nypr-design-system/test-support';\n\nmodule('Integration | Component | nypr-m-progress-bar', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('it renders', async function(assert) {\n    await render(hbs`<NyprMProgressBar/>`);\n    assert.dom('.o-progress').exists();\n  });\n\n  test('it updates as you scroll', async function(assert) {\n    await render(hbs`\n      <NyprMProgressBar/>\n      <div id=\"foo\" style=\"height: 1000px;\"/>\n    `);\n\n    let reset = await scrollPastTarget(this, '#foo')\n\n    assert.ok(`.o-progress has value ${this.element.querySelector('.o-progress')}`);\n\n    assert.dom('.o-progress').hasValue(1);\n\n    reset();\n  });\n});\n","import { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\n\nmodule('Integration | Component | nypr-m-pullquote', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('it renders', async function(assert) {\n    const QUOTE = \"Lorem Ipsum\";\n    const AUTHOR = \"Mrs. Foo Bar\";\n    this.setProperties({ QUOTE, AUTHOR });\n\n    await render(hbs`<NyprMPullquote @quote={{QUOTE}} @attribution={{AUTHOR}} />`);\n\n    assert.dom('blockquote.o-pullquote > p > span').hasText(QUOTE);\n    assert.dom('blockquote.o-pullquote > .o-pullquote__author').hasText(AUTHOR);\n\n    await render(hbs`\n      <NyprMPullquote as |pull|>\n        <pull.quote>\n          {{QUOTE}}\n        </pull.quote>\n\n        <pull.attribution>\n          {{AUTHOR}}\n        </pull.attribution>\n      </NyprMPullquote>\n    `);\n\n    assert.dom('blockquote.o-pullquote > p > span').hasText(QUOTE);\n    assert.dom('blockquote.o-pullquote > .o-pullquote__author').hasText(AUTHOR);\n\n    await render(hbs`\n      <NyprMPullquote as |pull|>\n        <pull.quote @quote={{QUOTE}} />\n\n        <pull.attribution @attribution={{AUTHOR}} />\n      </NyprMPullquote>\n    `);\n\n    assert.dom('blockquote.o-pullquote > p > span').hasText(QUOTE);\n    assert.dom('blockquote.o-pullquote > .o-pullquote__author').hasText(AUTHOR);\n  });\n});\n","import { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\n\nmodule('Integration | Component | nypr-m-secondary-nav', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('it renders', async function(assert) {\n    await render(hbs`{{nypr-m-secondary-nav}}`);\n\n    assert.dom('nav.c-secondary-nav').exists();\n  });\n});\n","import { module } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render, click } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\nimport test from 'ember-sinon-qunit/test-support/test';\n\nmodule('Integration | Component | nypr-m-share-tools', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('it renders', async function(assert) {\n    await render(hbs`\n      <NyprMShareTools as |tools|>\n        <tools.link @service='facebook' @username='foo'/>\n        <tools.link @service='twitter' @username='bar'/>\n        <tools.link @service='instagram' @username='baz'/>\n      </NyprMShareTools>\n    `);\n\n    assert.dom('a[href=\"https://www.facebook.com/foo\"]').exists();\n    assert.dom('.o-facebook-icon').exists();\n    assert.dom('a[href=\"https://twitter.com/bar\"]').exists();\n    assert.dom('.o-twitter-icon').exists();\n    assert.dom('a[href=\"https://www.instagram.com/baz\"]').exists();\n    assert.dom('.o-instagram-icon').exists();\n  });\n\n  test('it opens a popup to facebook', async function() {\n    const URL = window.location.toString();\n    this.mock(window)\n      .expects('open')\n      .withArgs(`https://www.facebook.com/sharer.php?u=${URL}`);\n\n    await render(hbs`\n      <NyprMShareTools as |tools|>\n        <tools.share @service='facebook'/>\n      </NyprMShareTools>\n    `);\n\n    await click('button.c-share-tools__link');\n  });\n\n  test('it opens a popup to twitter', async function() {\n    const URL = window.location.toString();\n    const TEXT = 'bar';\n    const VIA = 'baz';\n    this.mock(window)\n      .expects('open')\n      .withArgs(`https://twitter.com/intent/tweet?text=${TEXT}&via=${VIA}&url=${URL}`);\n\n    this.setProperties({\n      TEXT,\n      VIA\n    });\n\n    await render(hbs`\n      <NyprMShareTools as |tools|>\n        <tools.share @service='twitter' @params={{hash text=TEXT via=VIA}}/>\n      </NyprMShareTools>\n    `);\n\n    await click('button.c-share-tools__link');\n  });\n\n  test('it can override the derived share url', async function() {\n    const URL = 'http://example.com';\n    const TEXT = 'bar';\n    const VIA = 'baz';\n    this.mock(window)\n      .expects('open')\n      .withArgs(`https://twitter.com/intent/tweet?text=${TEXT}&via=${VIA}&url=${URL}`);\n\n    this.setProperties({\n      TEXT,\n      VIA,\n      URL,\n    });\n\n    await render(hbs`\n      <NyprMShareTools as |tools|>\n        <tools.share @service='twitter' @url={{URL}} @params={{hash text=TEXT via=VIA}}/>\n      </NyprMShareTools>\n    `);\n\n    await click('button.c-share-tools__link');\n  });\n\n  test('it can substitute a variable for the derived URL', async function() {\n    const BODY = 'check out {{URL}}';\n\n    this.mock(window)\n      .expects('open')\n      .withArgs(`mailto:?body=check out ${window.location.toString()}`);\n\n    this.setProperties({\n      BODY,\n    });\n\n    await render(hbs`\n      <NyprMShareTools as |tools|>\n        <tools.share @service='email' @params={{hash body=BODY}}/>\n      </NyprMShareTools>\n    `);\n\n    await click('button.c-share-tools__link');\n\n  })\n});\n","import { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render, findAll } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\n\nmodule('Integration | Component | nypr-m-tags', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('it renders', async function(assert) {\n    this.set('tags', ['foo', 'bar']);\n    await render(hbs`<NyprMTags @tags={{tags}}/>`);\n\n    assert.dom('.o-tags').hasText('#foo #bar');\n    assert.dom('span.o-tag').exists({count: 2});\n\n    await render(hbs`<NyprMTags @tags={{tags}} @prefix='' />`);\n    assert.dom('.o-tags').hasText('foo bar', 'can override prefix');\n\n    await render(hbs`\n      <NyprMTags @tags={{tags}} as |Tag tag|>\n        <Tag @url='/tags/{{tag}}' />\n      </NyprMTags>\n    `);\n    assert.dom('a.o-tag').exists({count: 2});\n    findAll('a.o-tag').forEach(el => {\n      assert.dom(el).hasAttribute('href', `/tags/${el.textContent.trim().slice(1)}`);\n    })\n  });\n});\n","import { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\n\nmodule('Integration | Component | nypr-m-text-banner', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('it renders', async function(assert) {\n    await render(hbs`\n      <NyprMTextBanner/>\n    `);\n\n    assert.dom('.o-text-banner').exists();\n  });\n\n  test('it renders properties', async function(assert) {\n    const CATEGORY = \"Test\";\n    const TITLE = \"Test Title\";\n    const URL = \"http://example.com\";\n    const TIMESTAMP = \"Just Now\";\n    const DESCRIPTION = \"Test Description\";\n\n    this.setProperties({\n      category: CATEGORY,\n      title: TITLE,\n      url: URL,\n      timestamp: TIMESTAMP,\n      description: DESCRIPTION,\n    });\n\n    await render(hbs`\n      <NyprMTextBanner\n        @category={{category}}\n        @title={{title}}\n        @url={{url}}\n        @timestamp={{timestamp}}\n        @description={{description}}\n      />\n    `);\n\n    assert.dom('.c-block__eyebrow').includesText(CATEGORY);\n    assert.dom('.c-block__title>a').includesText(TITLE);\n    assert.dom('.c-block__title>a').hasAttribute('href', URL);\n    assert.dom('.c-block-meta').includesText(TIMESTAMP);\n    assert.dom('.c-block__dek').includesText(DESCRIPTION);\n  });\n});\n","import { module } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render, click } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\nimport test from 'ember-sinon-qunit/test-support/test';\n\nmodule('Integration | Component | nypr-m-to-top', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('it renders', async function(assert) {\n    await render(hbs`<NyprMToTop/>`);\n\n    assert.dom('[data-test-to-top]').exists();\n  });\n\n  test('it scrolls to the top of the window', async function() {\n    this.mock(window)\n      .expects('scrollTo')\n      .withArgs({top: 0, behavior: 'smooth'});\n\n    await render(hbs`<NyprMToTop/>`);\n    await click('[data-test-to-top]');\n  });\n\n  test('it scrolls to a given target', async function() {\n    await render(hbs`\n      <div id=\"target\"/>\n      <NyprMToTop @selector='#target'/>\n    `);\n    let target = document.querySelector('#target');\n    let y = target.offsetTop - target.offsetHeight;\n\n    this.mock(window)\n      .expects('scrollTo')\n      .withArgs({top: y, behavior: 'smooth'});\n\n    await click('[data-test-to-top]');\n  });\n\n  test('it scrolls to a given offset', async function() {\n    const OFFSET = 500;\n    this.set('offset', OFFSET);\n    await render(hbs`\n      <div id=\"target\"/>\n      <NyprMToTop @offset={{offset}} @selector='#target'/>\n    `);\n    let target = document.querySelector('#target');\n    let y = target.offsetTop - (target.offsetHeight + OFFSET);\n\n    this.mock(window)\n      .expects('scrollTo')\n      .withArgs({top: y, behavior: 'smooth'});\n\n    await click('[data-test-to-top]');\n  });\n});\n","import { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\n\nmodule('Integration | Component | nypr-o-article-body', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('it renders', async function(assert) {\n    await render(hbs`<NyprOArticleBody/>`);\n\n    assert.dom('.c-article__body').exists();\n\n    // Template block usage:\n    await render(hbs`\n      <NyprOArticleBody>\n        template block text\n      </NyprOArticleBody>\n    `);\n\n    assert.dom('.c-article__body').hasText('template block text');\n  });\n});\n","import { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\n\nmodule('Integration | Component | nypr-o-article-footer', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('it renders', async function(assert) {\n    const TAGS = ['foo', 'bar'];\n    const CONTACT = 'contact us';\n    const DONATE_MESSAGE = 'Donate already';\n    const DONATE_CTA = 'donate';\n\n    this.setProperties({\n      tags: TAGS,\n      contact: CONTACT,\n      donateMessage: DONATE_MESSAGE,\n      donateCta: DONATE_CTA,\n    });\n\n    await render(hbs`<NyprOArticleFooter/>`);\n\n    assert.dom('.c-article__footer').exists();\n\n    await render(hbs`\n      <NyprOArticleFooter as |footer|>\n        <footer.tags @tags={{tags}} as |Tag tag|>\n          <Tag @url='http://example.com/tags/{{tag}}'/>\n        </footer.tags>\n\n        <footer.contact>\n          {{contact}}\n        </footer.contact>\n\n        <footer.donate\n          @linkText={{donateCta}}\n          @linkUrl='https://example.com/pledge'\n          @message={{donateMessage}}/>\n\n        <footer.comments>\n          comments go here\n        </footer.comments>\n      </NyprOArticleFooter>\n    `);\n\n    assert.dom('.o-tag').exists({count: 2});\n    assert.dom('.c-article__contact').hasText(CONTACT);\n    assert.dom('[data-test-donate-message]').hasText(DONATE_MESSAGE);\n    assert.dom('[data-test-article-footer-comments]').hasText('comments go here');\n  });\n});\n","import { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\n\nmodule('Integration | Component | nypr-o-article-header', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('it renders', async function(assert) {\n    await render(hbs`<NyprOArticleHeader/>`);\n\n    assert.dom('.c-article__header').exists();\n  });\n});\n","import { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\n\nmodule('Integration | Component | nypr-o-block-list-group', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('it renders columns', async function(assert) {\n    await render(hbs`\n      <NyprOBlockListGroup as |blg|>\n        <blg.col1>\n          column 1\n        </blg.col1>\n        <blg.col2>\n          column 2\n        </blg.col2>\n      </NyprOBlockListGroup>\n    `);\n\n    assert.dom('.c-block-group__col1').hasText('column 1');\n    assert.dom('.c-block-group__col2').hasText('column 2');\n  });\n\n  test('it tracks how many columns are rendered', async function(assert) {\n    await render(hbs`\n      <NyprOBlockListGroup as |blg|>\n        <blg.col1>\n          column 1\n        </blg.col1>\n      </NyprOBlockListGroup>\n    `);\n\n    assert.dom('.c-block-group').hasClass('c-block-group--single-col');\n  });\n\n  test('the ad unit renders', async function(assert) {\n    await render(hbs`\n      <NyprOBlockListGroup as |blg|>\n        <blg.col1 as |col|>\n          <col.ad />\n        </blg.col1>\n      </NyprOBlockListGroup>\n    `);\n\n    assert.dom('.o-ad').exists();\n  });\n});\n","import { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\n\nmodule('Integration | Component | nypr-o-contact', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('it renders', async function(assert) {\n    await render(hbs`<NyprOContact/>`);\n    assert.dom('.c-contact-tout').exists();\n\n    await render(hbs`\n      <NyprOContact>\n        <p><strong>hello</strong> <em>world</em></p>\n      </NyprOContact>\n    `);\n\n    assert.dom('.c-contact-tout').hasText('hello world');\n  });\n});\n","import { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render, click } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\n\nmodule('Integration | Component | nypr-o-donate', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('it renders', async function(assert) {\n    assert.expect(3)\n\n    this.set('close', () => assert.ok('close argument is called'));\n\n    await render(hbs`\n      <NyprODonate\n        @message='hello world'\n        @linkText='click me'\n        @linkUrl='http://example.com/pledge'\n        @close={{action close}}\n      />\n    `);\n\n    await click('[data-test-donate-close]');\n\n    assert.dom('.c-donate-tout__inner p').hasText('hello world');\n    assert.dom('a.o-button').hasAttribute('href', 'http://example.com/pledge');\n  });\n\n  test('yields a block for the \"message\" area', async function(assert) {\n    const TEXT = 'Donate';\n    const URL = 'https://example.com';\n\n    this.setProperties({\n      TEXT,\n      URL,\n      message: '<p data-test-message>hello <strong>world</strong></p>',\n    });\n\n    await render(hbs`\n      <NyprODonate @linkText={{TEXT}} @linkUrl={{URL}}>\n        {{{message}}}\n      </NyprODonate>\n    `);\n\n    assert.dom('[data-test-message]').hasText('hello world');\n    assert.dom('a.o-button').hasAttribute('href', URL);\n    assert.dom('a.o-button').hasText(TEXT);\n  });\n});\n","import { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\n\nmodule('Integration | Component | nypr-o-featured-block-list', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('it renders', async function(assert) {\n    await render(hbs`\n      <NyprOFeaturedBlockList as |fbl|>\n        <fbl.heading>\n          Featured Block List Heading\n        </fbl.heading>\n\n        <fbl.featured>\n          Featured Block List Content\n        </fbl.featured>\n\n        <fbl.col>\n          column to the side\n        </fbl.col>\n      </NyprOFeaturedBlockList>\n    `);\n\n    assert.dom('section.c-featured-blocks').exists();\n    assert.dom('h2.c-featured-blocks__heading').hasText('Featured Block List Heading');\n    assert.dom('.c-featured-blocks__col1').hasText('Featured Block List Content');\n    assert.dom('.c-featured-blocks__col2').hasText('column to the side');\n  });\n});\n","import { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\n\nmodule('Integration | Component | nypr-o-footer', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('it renders', async function(assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.set('myAction', function(val) { ... });\n\n    await render(hbs`{{nypr-o-footer}}`);\n\n    assert.dom('footer.c-main-footer').exists();\n  });\n});\n","import { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render, waitUntil } from '@ember/test-helpers';\nimport { set } from '@ember/object';\nimport hbs from 'htmlbars-inline-precompile';\n\nimport { GALLERY as SLIDES } from 'dummy/controllers/docs/molecules/nypr-m-gallery-lead';\nimport { inViewport } from 'dummy/helpers/in-viewport';\n\nmodule('Integration | Component | nypr-o-gallery-overlay', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('it renders', async function(assert) {\n    const TITLE = 'Foo Gallery';\n    const AD_TEXT = 'Bar Ad';\n\n    this.setProperties({\n      SLIDES,\n      TITLE,\n      AD_TEXT,\n    });\n\n    await render(hbs`\n      <NyprOGalleryOverlay\n        @title={{TITLE}}\n        @parentRoute={{array 'foo' 'bar'}}\n        @slides={{SLIDES}}\n        as |index gallery|>\n\n        {{#if (eq index 1)}}\n          <gallery.billboard>\n            {{AD_TEXT}}\n          </gallery.billboard>\n        {{/if}}\n\n      </NyprOGalleryOverlay>\n    `);\n\n    assert.dom('[data-test-gallery-title]').hasText(TITLE);\n    assert.dom('[data-test-gallery-slide]').exists({count: SLIDES.length});\n    assert.dom('[data-test-gallery-billboard]').includesText(AD_TEXT);\n\n    const gallery = document.querySelector('[data-test-gallery-overlay]');\n    const galleryHeight = Math.round(gallery.getBoundingClientRect().height);\n    assert.equal(galleryHeight, Math.round(parseFloat(gallery.getBoundingClientRect().height)), 'resizes body to match gallery height');\n  });\n\n  test('it scrolls to a slide at the specified zero-based index on render', async function(assert) {\n    const TITLE = 'Foo Gallery';\n    const SLIDE_FOR_INIT = SLIDES.length - 1;\n\n    this.setProperties({\n      SLIDES: SLIDES.map((slide, i) => {\n        set(slide, 'full', `/test-image${i + 1}.jpeg`);\n        return slide;\n      }),\n      TITLE,\n      SLIDE_FOR_INIT,\n    });\n\n    await render(hbs`\n      <NyprOGalleryOverlay\n        @title={{TITLE}}\n        @parentRoute={{array 'foo' 'bar'}}\n        @slides={{SLIDES}}\n        @slideForInit={{SLIDE_FOR_INIT}}\n      />\n    `);\n\n    const slideForInit = document.querySelector(`[data-test-gallery-slide=\"${SLIDE_FOR_INIT}\"]`);\n    // await pauseTest();\n    await waitUntil(() => {\n      return inViewport(slideForInit);\n    }, {timeout: 1000});\n    assert.ok(`slide ${SLIDE_FOR_INIT + 1} should be visible`);\n  });\n\n  test('slides call the gallery `registerSlide` method on insert', async function(assert) {\n    this.setProperties({\n      registerSlide: slide => assert.ok(slide instanceof HTMLElement),\n      SLIDES,\n    });\n    assert.expect(SLIDES.length);\n\n    await render(hbs`\n      <NyprOGalleryOverlay\n        @registerSlide={{registerSlide}}\n        @slides={{SLIDES}}\n      />\n    `);\n  })\n});\n","import { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render, click } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\n\nimport { scrollPastHeader } from 'nypr-design-system/test-support';\n\nmodule('Integration | Component | nypr-o-header', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('it renders', async function(assert) {\n    const LEADERBOARD = 'ad unit';\n    const BRANDING = 'some logo';\n    const PRIMARY_NAV = [{route: ['foo'], text: 'One'}, {route: ['bar'], text: 'Two'}];\n    const SECONDARY_NAV = [{url: '/three', Title: 'Three'}, {url: '/four', Title: 'Four'}];\n    const HEADLINE = \"headline\";\n    const RIGHT_SIDE = 'foo';\n\n    this.setProperties({\n      LEADERBOARD,\n      BRANDING,\n      PRIMARY_NAV,\n      SECONDARY_NAV,\n      HEADLINE,\n      RIGHT_SIDE,\n    });\n\n    // test injection for leaderboard\n    await render(hbs`\n      <NyprOHeader @rules={{hash leaderboard=true}} as |header|>\n        <header.leaderboard @hideLabel={{true}}>\n          {{LEADERBOARD}}\n        </header.leaderboard>\n\n        <header.menu as |menu|>\n          <menu.branding>\n            {{BRANDING}}\n          </menu.branding>\n\n          <menu.primaryNav @navItems={{PRIMARY_NAV}} />\n          <menu.secondaryNav @navItems={{SECONDARY_NAV}} />\n        </header.menu>\n\n        <header.left as |left|>\n          <left.branding>\n            {{BRANDING}}\n          </left.branding>\n\n          <left.headline>\n            {{HEADLINE}}\n          </left.headline>\n        </header.left>\n\n        <header.nav @navItems={{PRIMARY_NAV}}/>\n\n        <header.right as |right|>\n          <span class=\"arbitrary-content\">\n            {{RIGHT_SIDE}}\n          </span>\n\n          <right.search as |search|>\n            <search.open/>\n            <search.form/>\n          </right.search>\n        </header.right>\n\n      </NyprOHeader>\n    `);\n\n    // leaderboard ad\n    assert.dom('.o-ad--leaderboard').hasText(LEADERBOARD);\n\n    // side menu\n    assert.dom('.c-side-menu__branding').hasText(BRANDING);\n    assert.dom('.c-primary-nav--side li').exists({count: 2});\n    assert.dom('.c-side-menu__secondary-nav li').exists({count: 2});\n\n    // full width strip\n    assert.dom('.c-main-header__branding').hasText(BRANDING);\n    assert.dom('.c-main-header__title').hasText(HEADLINE);\n    assert.dom('.c-primary-nav--top li').exists({count: 2});\n    assert.dom('.c-main-header__right .arbitrary-content').hasText(RIGHT_SIDE);\n\n    // search\n    assert.dom('.c-search-toggle').exists();\n    assert.dom('form.c-search').exists();\n  });\n\n  test('interactivity', async function(assert) {\n    await render(hbs`\n      <NyprOHeader as |header|>\n        <header.menu/>\n        <header.left/>\n      </NyprOHeader>\n    `);\n\n    await click('.c-main-header__left .o-menu-toggle');\n\n    assert.dom('.c-main-header.side-menu-is-active').exists();\n    assert.dom('body.side-menu-is-active', document).exists();\n  });\n\n  test('floating header', async function(assert) {\n    // header test injection\n    await render(hbs`\n      <NyprOHeader @rules={{hash progressTarget=true}} as |header|>\n        <header.menu/>\n        <header.left/>\n      </NyprOHeader>\n    `);\n\n    let reset = await scrollPastHeader(this);\n\n    const { height:HEADER_HEIGHT } = this.element.querySelector('.c-main-header__inner').getBoundingClientRect();\n\n    assert.dom('.o-progress').exists();\n    assert.dom('.c-main-header__inner.c-floating-header.is-visible').exists();\n    const header = this.element.querySelector('.c-main-header');\n    assert.equal(Math.round(header.offsetHeight), Math.round(HEADER_HEIGHT));\n\n    reset();\n  });\n\n  test('yields active rules', async function(assert) {\n    let service = this.owner.lookup('service:nypr-o-header');\n\n    service.addRule(null, {\n      resting: {\n        foo: true,\n      },\n      floating: {\n        bar: true,\n      }\n    });\n\n    await render(hbs`\n      <NyprOHeader as |header|>\n        <header.left>\n          <div id=\"example\">\n            {{#if header.rules.foo}}\n              foo\n            {{/if}}\n            {{#if header.rules.bar}}\n              bar\n            {{/if}}\n          </div>\n        </header.left>\n      </NyprOHeader>\n    `);\n\n    assert.dom('#example').hasText('foo', 'resting state should turn on `foo` rule');\n\n    function headerIsFloating(owner) {\n      return owner.element.querySelector('.c-floating-header');\n    }\n    let reset = await scrollPastHeader(this, headerIsFloating);\n\n    assert.dom('#example').hasText('bar', 'floating state should turn on `bar` rule');\n\n    reset();\n  });\n});\n","import { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\n\nmodule('Integration | Component | nypr-o-newsletter-tout', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('it renders', async function(assert) {\n    await render(hbs`\n      <NyprONewsletterTout\n        @img={{hash\n          src='/test-image1.jpeg'\n          alt='newsletter image'\n        }}\n        as |tout|>\n        <tout.heading>\n          Newsletter Tout\n        </tout.heading>\n\n        <tout.blurb>\n          Tout Blurb\n        </tout.blurb>\n\n        <tout.legal/>\n      </NyprONewsletterTout>\n    `);\n\n    assert.dom('.c-newsletter-tout__media img').hasAttribute('src', '/test-image1.jpeg');\n    assert.dom('[data-test-newsletter-tout-heading]').hasText('Newsletter Tout');\n    assert.dom('[data-test-newsletter-tout-blurb]').hasText('Tout Blurb')\n  });\n});\n","import { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\n\nmodule('Integration | Component | nypr-o-related-content', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('it renders', async function(assert) {\n    this.set('items', [{\n      url: 'http://example.com',\n      title: 'foo'\n    }, {\n      url: 'http://example.com/bar',\n      title: 'bar',\n    }])\n    await render(hbs`<NyprORelatedContent/>`);\n\n    assert.dom('h3.c-related-content__heading').hasText('Related');\n    assert.dom('a').doesNotExist();\n\n    await render(hbs`<NyprORelatedContent @items={{items}}/>`);\n    assert.dom('a').exists({count: 2});\n\n  });\n});\n","import { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\n\nmodule('Integration | Component | nypr-o-sponsored-tout', function(hooks) {\n  setupRenderingTest(hooks);\n\n  test('it renders', async function(assert) {\n    await render(hbs`\n      <NyprOSponsoredTout>\n        sponsored text\n      </NyprOSponsoredTout>\n    `);\n\n    assert.dom('.c-sponsored-tout').hasText('sponsored text');\n\n    await render(hbs`\n      <NyprOSponsoredTout @heading='Sponsored'/>\n    `);\n\n    assert.dom('h2.c-sponsored-tout__heading').hasText('Sponsored');\n  });\n\n});\n","import { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\n\nimport { cast } from 'dummy/helpers/cast';\n\nmodule('Integration | Helper | cast', function(hooks) {\n  setupRenderingTest(hooks);\n\n  // Replace this with your real tests.\n  test('it renders', async function(assert) {\n    assert.ok(typeof cast([1234, 'String']) === 'string', 'numbers to string');\n    assert.ok(typeof cast([1234, 'string']) === 'string', 'numbers to string case insensitive');\n\n    assert.ok(typeof cast(['1234', 'Number']) === 'number', 'string to number');\n    assert.ok(typeof cast(['1234', 'number']) === 'number', 'string to number case insensitive');\n  });\n});\n","import { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\n\nimport { inViewport }  from 'nypr-design-system/helpers/in-viewport';\n\nmodule('Integration | Helper | in-viewport', function(hooks) {\n  setupRenderingTest(hooks);\n\n  // Replace this with your real tests.\n  test('it renders', async function(assert) {\n    const HEIGHT = window.innerHeight * 2;\n\n    const testingContainer = document.querySelector('#ember-testing-container');\n    const OLD_POSITION = testingContainer.style.position;\n    testingContainer.style.height = `${HEIGHT}px`;\n    testingContainer.style.position = 'relative';\n\n    this.set('spacerHeight', HEIGHT);\n\n    await render(hbs`\n      <div id=\"spacer\" style=\"height: {{spacerHeight}}px; margin-bottom: 25px;\"/>\n      <div id=\"target\" style=\"height: 25px;\"/>\n    `);\n\n    const target = document.querySelector('#target');\n\n    assert.notOk(inViewport(target), 'target should not be in viewport');\n\n    window.scrollTo(0, HEIGHT);\n\n    assert.ok(inViewport(target), 'target should be in viewport');\n\n    testingContainer.style.height = '';\n    testingContainer.style.position = OLD_POSITION;\n    testingContainer.scrollTo(0, 0);\n  });\n});\n","QUnit.module('ESLint | app');\n\nQUnit.test('app.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'app.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('components/color-showcase.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'components/color-showcase.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('components/color-showcase/gradient.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'components/color-showcase/gradient.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('components/color-showcase/row.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'components/color-showcase/row.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('components/color-showcase/swatch.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'components/color-showcase/swatch.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('components/theme-chooser.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'components/theme-chooser.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('components/theme-chooser/item.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'components/theme-chooser/item.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('controllers/docs/atoms/nypr-a-toggle-box.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'controllers/docs/atoms/nypr-a-toggle-box.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('controllers/docs/molecules/blocks.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'controllers/docs/molecules/blocks.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('controllers/docs/molecules/nypr-m-box-banner.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'controllers/docs/molecules/nypr-m-box-banner.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('controllers/docs/molecules/nypr-m-breadcrumb.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'controllers/docs/molecules/nypr-m-breadcrumb.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('controllers/docs/molecules/nypr-m-byline.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'controllers/docs/molecules/nypr-m-byline.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('controllers/docs/molecules/nypr-m-gallery-lead.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'controllers/docs/molecules/nypr-m-gallery-lead.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('controllers/docs/molecules/nypr-m-newsletter-form.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'controllers/docs/molecules/nypr-m-newsletter-form.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('controllers/docs/organisms/nypr-o-article-header.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'controllers/docs/organisms/nypr-o-article-header.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('controllers/docs/organisms/nypr-o-gallery-overlay.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'controllers/docs/organisms/nypr-o-gallery-overlay.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('controllers/docs/organisms/nypr-o-header.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'controllers/docs/organisms/nypr-o-header.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('controllers/docs/organisms/nypr-o-related-content.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'controllers/docs/organisms/nypr-o-related-content.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('helpers/color-fn.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'helpers/color-fn.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('helpers/to-color.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'helpers/to-color.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('resolver.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'resolver.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('router.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'router.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('utils/sass-vars/colors.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'utils/sass-vars/colors.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('utils/sass-vars/gothamist-colors.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'utils/sass-vars/gothamist-colors.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('utils/sass-vars/wnyc-colors.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'utils/sass-vars/wnyc-colors.js should pass ESLint\\n\\n');\n});\n\n","QUnit.module('TemplateLint');\n\nQUnit.test('dummy/templates/application.hbs', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'dummy/templates/application.hbs should pass TemplateLint.\\n\\n');\n});\n\nQUnit.test('dummy/templates/components/color-showcase.hbs', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'dummy/templates/components/color-showcase.hbs should pass TemplateLint.\\n\\n');\n});\n\nQUnit.test('dummy/templates/components/color-showcase/gradient.hbs', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'dummy/templates/components/color-showcase/gradient.hbs should pass TemplateLint.\\n\\n');\n});\n\nQUnit.test('dummy/templates/components/color-showcase/row.hbs', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'dummy/templates/components/color-showcase/row.hbs should pass TemplateLint.\\n\\n');\n});\n\nQUnit.test('dummy/templates/components/color-showcase/swatch.hbs', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'dummy/templates/components/color-showcase/swatch.hbs should pass TemplateLint.\\n\\n');\n});\n\nQUnit.test('dummy/templates/components/theme-chooser.hbs', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'dummy/templates/components/theme-chooser.hbs should pass TemplateLint.\\n\\n');\n});\n\nQUnit.test('dummy/templates/components/theme-chooser/item.hbs', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'dummy/templates/components/theme-chooser/item.hbs should pass TemplateLint.\\n\\n');\n});\n\nQUnit.test('dummy/templates/docs.hbs', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'dummy/templates/docs.hbs should pass TemplateLint.\\n\\n');\n});\n\nQUnit.test('dummy/templates/index.hbs', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'dummy/templates/index.hbs should pass TemplateLint.\\n\\n');\n});\n\nQUnit.test('dummy/templates/not-found.hbs', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'dummy/templates/not-found.hbs should pass TemplateLint.\\n\\n');\n});\n\n","QUnit.module('ESLint | tests');\n\nQUnit.test('integration/components/nypr-a-ad-label-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-a-ad-label-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/components/nypr-a-button-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-a-button-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/components/nypr-a-kicker-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-a-kicker-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/components/nypr-a-media-object-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-a-media-object-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/components/nypr-a-picture-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-a-picture-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/components/nypr-a-section-heading-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-a-section-heading-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/components/nypr-a-story-headline-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-a-story-headline-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/components/nypr-a-svg-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-a-svg-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/components/nypr-a-tag-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-a-tag-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/components/nypr-a-toggle-box-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-a-toggle-box-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/components/nypr-m-author-block-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-m-author-block-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/components/nypr-m-block-list-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-m-block-list-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/components/nypr-m-block-meta-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-m-block-meta-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/components/nypr-m-block-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-m-block-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/components/nypr-m-box-banner-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-m-box-banner-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/components/nypr-m-brands-linkroll-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-m-brands-linkroll-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/components/nypr-m-breadcrumb-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-m-breadcrumb-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/components/nypr-m-byline-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-m-byline-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/components/nypr-m-figcaption-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-m-figcaption-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/components/nypr-m-figure-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-m-figure-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/components/nypr-m-gallery-lead-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-m-gallery-lead-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/components/nypr-m-inline-search-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-m-inline-search-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/components/nypr-m-nav-read-more-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-m-nav-read-more-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/components/nypr-m-newsletter-form-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-m-newsletter-form-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/components/nypr-m-newsletter-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-m-newsletter-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/components/nypr-m-progress-bar-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-m-progress-bar-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/components/nypr-m-pullquote-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-m-pullquote-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/components/nypr-m-secondary-nav-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-m-secondary-nav-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/components/nypr-m-share-tools-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-m-share-tools-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/components/nypr-m-tags-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-m-tags-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/components/nypr-m-text-banner-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-m-text-banner-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/components/nypr-m-to-top-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-m-to-top-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/components/nypr-o-article-body-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-o-article-body-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/components/nypr-o-article-footer-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-o-article-footer-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/components/nypr-o-article-header-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-o-article-header-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/components/nypr-o-block-list-group-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-o-block-list-group-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/components/nypr-o-contact-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-o-contact-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/components/nypr-o-donate-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-o-donate-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/components/nypr-o-featured-block-list-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-o-featured-block-list-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/components/nypr-o-footer-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-o-footer-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/components/nypr-o-gallery-overlay-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-o-gallery-overlay-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/components/nypr-o-header-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-o-header-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/components/nypr-o-newsletter-tout-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-o-newsletter-tout-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/components/nypr-o-related-content-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-o-related-content-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/components/nypr-o-sponsored-tout-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/components/nypr-o-sponsored-tout-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/helpers/cast-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/helpers/cast-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('integration/helpers/in-viewport-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'integration/helpers/in-viewport-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('test-helper.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'test-helper.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('unit/services/nypr-o-header-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'unit/services/nypr-o-header-test.js should pass ESLint\\n\\n');\n});\n\nQUnit.test('unit/utils/toggle-box-positions-test.js', function(assert) {\n  assert.expect(1);\n  assert.ok(true, 'unit/utils/toggle-box-positions-test.js should pass ESLint\\n\\n');\n});\n\n","import Application from '../app';\nimport config from '../config/environment';\nimport { setApplication } from '@ember/test-helpers';\nimport { start } from 'ember-qunit';\n\nsetApplication(Application.create(config.APP));\n\nstart();\n","import { module } from 'qunit';\nimport { setupTest } from 'ember-qunit';\nimport test from 'ember-sinon-qunit/test-support/test';\n\nmodule('Unit | Service | nypr-o-header', function(hooks) {\n  setupTest(hooks);\n\n  test('it sets arbitrary instance variables based on UI state', function(assert) {\n    let header = this.owner.lookup('component:nypr-o-header');\n    let service = this.owner.lookup('service:nypr-o-header');\n\n    // no routing in unit tests\n    service.addRule(null, {\n      resting: {\n        bar: true,\n      },\n      floating: {\n        bar: false,\n      },\n      all: {\n        baz: true,\n      }\n    });\n\n    assert.ok(header.rules.bar, 'bar should be true under rules namespace');\n    assert.ok(header.rules.baz, '`all` rules should be true in both states');\n\n    header.set('outOfViewport', true);\n\n    assert.equal(header.rules.bar, false, 'bar should be false when outOfViewport flips');\n    assert.ok(header.rules.baz, '`all` rules should be true in both states');\n  });\n\n  test('it does inverted clears', function(assert) {\n    let header = this.owner.lookup('component:nypr-o-header');\n    let service = this.owner.lookup('service:nypr-o-header');\n\n    service.addRule(null, {\n      resting: {\n        bar: true,\n      },\n      floating: {\n        baz: true,\n      },\n      all: {\n        foo: true,\n      },\n    });\n\n    assert.ok(header.rules.bar, 'bar should be true');\n    assert.ok(header.rules.foo, 'foo should be true');\n\n    header.set('outOfViewport', true);\n\n    assert.notOk(header.rules.bar, 'should clear keys not included in the current set');\n    assert.ok(header.rules.baz);\n    assert.ok(header.rules.foo, 'foo should be true');\n\n    header.set('outOfViewport', false);\n\n    assert.ok(header.rules.bar);\n    assert.notOk(header.rules.baz);\n    assert.ok(header.rules.foo, 'foo should be true');\n  });\n\n  test('all key is not required', async function(assert) {\n    let header = this.owner.lookup('component:nypr-o-header');\n    let service = this.owner.lookup('service:nypr-o-header');\n\n    service.addRule(null, {\n      resting: {\n        bar: true,\n      },\n      floating: {\n        baz: true,\n      },\n    });\n\n    assert.ok(header.rules.bar, 'bar should be true');\n    header.set('outOfViewport', true);\n    assert.ok(header.rules.baz, 'bar should be true');\n    header.set('outOfViewport', false);\n    assert.ok('can change states without exception');\n  });\n});\n","import toggleBoxPositions from 'dummy/utils/toggle-box-positions';\nimport { module, skip } from 'qunit';\n\nmodule('Unit | Utility | toggle-box-positions', function() {\n\n  // Replace this with your real tests.\n  skip('it works', function(assert) {\n    let result = toggleBoxPositions();\n    assert.ok(result);\n  });\n});\n","define('dummy/config/environment', [], function() {\n  var prefix = 'dummy';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(decodeURIComponent(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","require('dummy/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":["hooks","assert","dom","exists","hooks","assert","expect","dom","hasText","set","ok","hasAttribute","doesNotExist","exists","hooks","assert","dom","exists","equal","element","textContent","trim","hooks","assert","dom","exists","hooks","assert","IMG","set","dom","exists","hasAttribute","hooks","assert","dom","exists","hasText","hooks","assert","equal","element","textContent","trim","dom","hasText","hooks","assert","equal","element","textContent","trim","ok","hooks","assert","dom","hasText","exists","hooks","assert","dom","hasText","hooks","assert","AUTHOR","name","title","image","bio","contact","twitter","email","set","dom","hasText","hasAttribute","hooks","assert","dom","exists","count","includesText","hooks","assert","dom","exists","hooks","assert","dom","exists","doesNotExist","hooks","assert","dom","exists","hasText","doesNotExist","set","mock","once","hooks","assert","dom","exists","doesNotIncludeText","hooks","assert","dom","exists","set","label","url","count","hasAttribute","hooks","IN_HOUSE","name","url","CONTRIBUTORS","org","assert","dom","exists","setProperties","JUST_ONE","slice","count","forEach","el","i","hasText","hasAttribute","doesNotIncludeText","ALL","concat","JUST_TWO","SPONSOR","hooks","assert","CAPTION","CREDIT","setProperties","caption","credit","dom","exists","includesText","hasText","doesNotExist","hooks","assert","dom","exists","GALLERY","caption","credit","thumb","srcS","title","hooks","assert","set","mock","once","withArgs","dom","exists","count","length","hasAttribute","hasText","hooks","assert","dom","exists","expect","QUERY","SEARCH","val","equal","setProperties","hasAttribute","doesNotExist","hasNoValue","hasValue","spy","set","ok","firstCall","calledWith","secondCall","hooks","assert","dom","exists","count","includesText","hooks","assert","ENDPOINT","EMAIL","OTHER_PARAMS","id","SUCCESS_RESPONSE","Response","JSON","stringify","status","setProperties","mock","fetch","expects","withArgs","method","headers","body","email","resolves","dom","hasText","DEFAULT_SUBSCRIBED_MESSAGE","ERROR_MESSAGE","ERROR_RESPONSE","detail","hooks","assert","BLURB","OTHER_LEGAL","setProperties","dom","exists","hasText","DEFAULT_LEGAL","hooks","assert","dom","exists","reset","ok","element","querySelector","hasValue","hooks","assert","QUOTE","AUTHOR","setProperties","dom","hasText","hooks","assert","dom","exists","hooks","assert","dom","exists","URL","window","location","toString","mock","expects","withArgs","TEXT","VIA","setProperties","BODY","hooks","assert","set","dom","hasText","exists","count","forEach","el","hasAttribute","textContent","trim","slice","hooks","assert","dom","exists","CATEGORY","TITLE","URL","TIMESTAMP","DESCRIPTION","setProperties","category","title","url","timestamp","description","includesText","hasAttribute","hooks","assert","dom","exists","mock","window","expects","withArgs","top","behavior","target","document","querySelector","y","offsetTop","offsetHeight","OFFSET","set","hooks","assert","dom","exists","hasText","hooks","assert","TAGS","CONTACT","DONATE_MESSAGE","DONATE_CTA","setProperties","tags","contact","donateMessage","donateCta","dom","exists","count","hasText","hooks","assert","dom","exists","hooks","assert","dom","hasText","hasClass","exists","hooks","assert","dom","exists","hasText","hooks","assert","expect","set","ok","dom","hasText","hasAttribute","TEXT","URL","setProperties","message","hooks","assert","dom","exists","hasText","hooks","assert","dom","exists","hooks","assert","TITLE","AD_TEXT","setProperties","SLIDES","dom","hasText","exists","count","length","includesText","gallery","document","querySelector","galleryHeight","Math","round","getBoundingClientRect","height","equal","parseFloat","SLIDE_FOR_INIT","map","slide","i","set","slideForInit","timeout","ok","registerSlide","HTMLElement","expect","hooks","assert","LEADERBOARD","BRANDING","PRIMARY_NAV","route","text","SECONDARY_NAV","url","Title","HEADLINE","RIGHT_SIDE","setProperties","dom","hasText","exists","count","document","reset","height","HEADER_HEIGHT","element","querySelector","getBoundingClientRect","header","equal","Math","round","offsetHeight","service","owner","lookup","addRule","resting","foo","floating","bar","headerIsFloating","hooks","assert","dom","hasAttribute","hasText","hooks","assert","set","url","title","dom","hasText","doesNotExist","exists","count","hooks","assert","dom","hasText","hooks","assert","ok","hooks","assert","HEIGHT","window","innerHeight","testingContainer","document","querySelector","OLD_POSITION","style","position","height","set","target","notOk","scrollTo","ok","QUnit","module","test","assert","expect","ok","QUnit","module","test","assert","expect","ok","QUnit","module","test","assert","expect","ok","Application","create","config","APP","hooks","assert","header","owner","lookup","service","addRule","resting","bar","floating","all","baz","ok","rules","set","equal","foo","notOk","assert","result","ok"],"mappings":"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","file":"tests.js"}